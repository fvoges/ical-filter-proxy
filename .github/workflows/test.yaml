name: Tests

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

permissions:
  contents: read

jobs:
  test:
    name: Unit Tests
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: stable

      - name: Download dependencies
        run: go mod download

      - name: Verify dependencies
        run: go mod verify

      - name: Run tests
        run: go test -v -race -coverprofile=coverage.out -covermode=atomic ./...

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v4
        if: github.event_name != 'pull_request'
        with:
          file: ./coverage.out
          fail_ci_if_error: false
          token: ${{ secrets.CODECOV_TOKEN }}

      - name: Test coverage report
        run: go tool cover -func=coverage.out

  integration:
    name: Integration Tests
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: stable

      - name: Build binary
        run: go build -v -o ical-filter-proxy .

      - name: Test binary version
        run: ./ical-filter-proxy -version

      - name: Create test config
        run: |
          cat > test-config.yaml << 'EOF'
          calendars:
            - name: test
              public: true
              feed_url: https://example.com/test.ics
          EOF

      - name: Validate config
        run: ./ical-filter-proxy -config test-config.yaml -validate
